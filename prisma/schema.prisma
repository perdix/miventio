// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  last_login DateTime?
  first_name String?
  last_name  String?
  title     String?
  email      String @unique
  password  String?
  phone      String?
  address   String?
  postcode  String?
  city      String?
  role      String?
  type    String?
  notes   String?
  roles Role[]
  tickets Ticket[]
  bookings Booking[]
  events Event[]
  activities Activity[]
}

model Role {
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  role String
  user_id String
  user User @relation(fields: [user_id], references: [id])
  organisation_id String
  organisation Organisation @relation(fields: [organisation_id], references: [id])

  @@id([user_id, organisation_id])
}

model Organisation {
  id        String  @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String @unique
  slug       String?
  description String?
  color String?
  events Event[]
  roles Role[]
}


model Event {
  id        String  @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  slug       String?
  description String?
  start DateTime
  end DateTime
  location String
  city String
  address String
  postcode String
  activities Activity[]
  bookings Booking[]
  tickets Ticket[]
  users User[]
  organisation_id String
  organisation Organisation @relation(fields: [organisation_id], references: [id])
}


model Activity {
  id        String  @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  description String?
  start DateTime
  end DateTime
  limit Int?
  location String?
  leader String?
  price Float
  event_id String
  event Event @relation(fields: [event_id], references: [id])
  bookings Booking[]
  users User[]

}

model Booking {
  id        String  @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  billing_address String
  billing_postcode String
  billing_city String
  billing_email String
  billing_name String
  total_price Float
  cart Json
  event_id String
  event Event @relation(fields: [event_id], references: [id])
  users User[]
  activitiese Activity[]
}


model Ticket {
  uid        String  @id @default(cuid())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  description String?
  price Float
  type String // role
  mode String // full day
  event_id String
  event Event @relation(fields: [event_id], references: [id])
  users User[]
}